{"version":3,"sources":["components/Header/Header.component.jsx","components/Tasks/CreateSection/CreateSection.component.jsx","components/Tasks/Todo/TodoTasks.component.jsx","components/Tasks/Completed/CompletedTasks.component.jsx","components/Tasks/Tasks.component.jsx","components/Footer/Footer.component.jsx","pages/Todo/Todo.page.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","className","href","CreateSection","handleCreateTodo","useState","todo","setTodo","message","setMessage","useEffect","onSubmit","e","newTodo","preventDefault","handleSubmitNewTodo","type","placeholder","autoFocus","value","onChange","target","TodoTasks","todos","handleUpdateTodo","handleDeleteTodo","notFinishTasks","filter","isTodoCompleted","sort","a","b","id","length","map","onClick","CompletedTasks","finishTasks","icon","Tasks","setTodos","selectedTodo","newTodos","selectedTodoId","Date","now","Footer","rel","TodoPage","library","add","fas","fab","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.173009b3.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.component.scss';\nconst Header = () => {\n  return (\n    <header className='globalHeader'>\n      <nav>\n        <ul>\n          <li>\n            <a href='/todo/js-version'>Vanilla</a>\n          </li>\n          <li>\n            <a href='/todo/jq-version'>JQuery</a>\n          </li>\n          <li>\n            <a href='/todo/vue-version'>Vue</a>\n          </li>\n          <li>\n            <a href='/todo/react-hooks-version' className='active'>\n              React Hooks\n            </a>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { useState, useEffect } from 'react';\nimport './CreateSection.component.scss';\n\nconst CreateSection = ({ handleCreateTodo }) => {\n  const [todo, setTodo] = useState('');\n  const [message, setMessage] = useState('');\n\n  useEffect(() => {\n    if (message && todo) {\n      setMessage('');\n    }\n  }, [message, todo]);\n\n  const handleSubmitNewTodo = (e, newTodo) => {\n    e.preventDefault();\n\n    if (!newTodo) {\n      setMessage('你沒輸入內容...!!!!');\n      return;\n    }\n\n    handleCreateTodo(e, newTodo);\n    setTodo('');\n  };\n\n  return (\n    <section className='create'>\n      <h2>\n        待辦事項\n        {message ? <span className='msgBox'>{message}</span> : null}\n      </h2>\n      <form onSubmit={(e) => handleSubmitNewTodo(e, todo)}>\n        <input\n          type='text'\n          placeholder='例如：倒垃圾'\n          className='addInput'\n          autoFocus\n          value={todo}\n          onChange={(e) => setTodo(e.target.value)}\n        />\n        <input\n          type='submit'\n          className='task__button task__submit'\n          value='新增'\n        />\n      </form>\n    </section>\n  );\n};\n\nexport default CreateSection;\n","import React from 'react';\nimport './TodoTasks.component.scss';\n\nconst TodoTasks = ({ todos = [], handleUpdateTodo, handleDeleteTodo }) => {\n  const notFinishTasks = todos\n    .filter((todo) => !todo.isTodoCompleted)\n    .sort((a, b) => b.id - a.id);\n\n  return (\n    <section className='notFinish'>\n      <section className='tasks'>\n        {notFinishTasks.length ? (\n          notFinishTasks.map((todo) => {\n            return (\n              <div className='task' key={todo.id}>\n                <span\n                  className='task__checkbox'\n                  onClick={() =>\n                    handleUpdateTodo({\n                      ...todo,\n                      isTodoCompleted: true,\n                    })\n                  }\n                />\n                <input\n                  type='text'\n                  className='task__content'\n                  value={todo.todo}\n                  onChange={(e) =>\n                    handleUpdateTodo({\n                      ...todo,\n                      todo: e.target.value,\n                    })\n                  }\n                />\n                <input\n                  type='button'\n                  className='task__button task__delete'\n                  value='刪除'\n                  onClick={() => handleDeleteTodo(todo.id)}\n                />\n              </div>\n            );\n          })\n        ) : (\n          <span>尚未新增待辦事項</span>\n        )}\n      </section>\n    </section>\n  );\n};\n\nexport default TodoTasks;\n","import React from 'react';\nimport './CompletedTasks.component.scss';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst CompletedTasks = ({ todos = [], handleUpdateTodo, handleDeleteTodo }) => {\n  const finishTasks = todos\n    .filter((todo) => todo.isTodoCompleted)\n    .sort((a, b) => b.id - a.id);\n\n  return (\n    <section className='finished'>\n      <h2>已完成</h2>\n      <section className='tasks'>\n        {finishTasks.length ? (\n          finishTasks.map((todo) => {\n            return (\n              <div className='task' key={todo.id}>\n                <span\n                  className='task__checkbox'\n                  onClick={() =>\n                    handleUpdateTodo({\n                      ...todo,\n                      isTodoCompleted: false,\n                    })\n                  }>\n                  <FontAwesomeIcon icon={['fas', 'check']} />\n                </span>\n                <span type='text' className='task__content'>\n                  {todo.todo}\n                </span>\n                <input\n                  type='button'\n                  className='task__button task__delete'\n                  value='刪除'\n                  onClick={() => handleDeleteTodo(todo.id)}\n                />\n              </div>\n            );\n          })\n        ) : (\n          <span>尚未完成任何事項</span>\n        )}\n      </section>\n    </section>\n  );\n};\n\nexport default CompletedTasks;\n","import React, { useState } from 'react';\nimport './Tasks.component.scss';\n\nimport CreateSection from './CreateSection/CreateSection.component';\nimport TodoTasks from './Todo/TodoTasks.component';\nimport CompletedTasks from './Completed/CompletedTasks.component';\n\nconst Tasks = () => {\n  const [todos, setTodos] = useState([]);\n\n  const handleCreateTodo = (e, todo) => {\n    setTodos([\n      ...todos,\n      {\n        id: Date.now(),\n        todo,\n        isTodoCompleted: false,\n      },\n    ]);\n  };\n\n  const handleUpdateTodo = (selectedTodo) => {\n    const newTodos = todos.map((todo) => {\n      return todo.id === selectedTodo.id ? selectedTodo : todo;\n    });\n\n    setTodos(newTodos);\n  };\n  const handleDeleteTodo = (selectedTodoId) => {\n    const newTodos = todos.filter((todo) => todo.id !== selectedTodoId);\n\n    setTodos(newTodos);\n  };\n\n  return (\n    <article className='content'>\n      <header>\n        <h1>TO.DO</h1>\n        <CreateSection handleCreateTodo={handleCreateTodo} />\n        <TodoTasks\n          todos={todos}\n          handleUpdateTodo={handleUpdateTodo}\n          handleDeleteTodo={handleDeleteTodo}\n        />\n        <CompletedTasks\n          todos={todos}\n          handleUpdateTodo={handleUpdateTodo}\n          handleDeleteTodo={handleDeleteTodo}\n        />\n      </header>\n    </article>\n  );\n};\n\nexport default Tasks;\n","import React from 'react';\nimport './Footer.component.scss';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst Footer = () => {\n  return (\n    <footer>\n      <section className='copyRight'>\n        Copyright &copy; 2019 Askie Lin All rights reserved.\n      </section>\n      <a\n        href='https://github.com/askiebaby/todo'\n        target='_blank'\n        rel='noreferrer'>\n        <FontAwesomeIcon icon={['fab', 'github']} />\n      </a>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport './Todo.page.scss';\n\nimport Header from '../../components/Header/Header.component';\nimport Tasks from '../../components/Tasks/Tasks.component';\nimport Footer from '../../components/Footer/Footer.component';\n\nconst TodoPage = () => {\n  return (\n    <div className='wrapper'>\n      <div className='mainBody'>\n        <Header />\n        <Tasks />\n        <Footer />\n      </div>\n    </div>\n  );\n};\n\nexport default TodoPage;\n","import './App.scss';\nimport TodoPage from './pages/Todo/Todo.page';\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\n\nlibrary.add(fas);\nlibrary.add(fab);\n\nfunction App() {\n  return <TodoPage />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}